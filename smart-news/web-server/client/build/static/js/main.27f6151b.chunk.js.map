{"version":3,"sources":["logo.svg","Auth/Auth.js","NewsCard/NewsCard.js","NewsPanel/NewsPanel.js","App/App.js","Navbar/navbar.js","serviceWorker.js","Base/Base.js","Login/LoginForm.js","Login/LoginPage.js","SignUp/SignUpForm.js","SignUp/SignUpPage.js","routes.js","index.js"],"names":["module","exports","__webpack_require__","p","Auth","token","email","localStorage","setItem","getItem","removeItem","NewsCard","url","getEmail","this","props","news","digest","request","Request","encodeURI","method","headers","Authorization","getToken","cache","fetch","_this","react_default","a","createElement","className","onClick","redirectToUrl","src","urlToImage","alt","title","description","source","name","reason","class","time","sendClickLog","window","open","React","Component","NewsPanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pageNum","totalPages","loadedAll","handleScroll","bind","assertThisInitialized","loadMoreNews","_","debounce","addEventListener","scrollY","pageYOffset","document","documentElement","scrollTop","innerHeight","body","offsetHeight","console","log","_this2","then","res","json","length","setState","concat","news_list","map","key","href","src_NewsCard_NewsCard","renderNews","id","App","src_NewsPanel_NewsPanel","Boolean","location","hostname","match","Base","_ref","children","isUserAuthenticated","es","to","LoginForm","onSubmit","onChange","errors","user","action","summary","type","htmlFor","password","value","LoginPage","context","processForm","changeUser","event","preventDefault","Accept","Content-Type","JSON","stringify","response","status","authenticateUser","router","replace","message","field","target","src_Login_LoginForm","contextTypes","PropTypes","object","isRequired","SignUpForm","SignUpPage","confirm_password","src_SignUp_SignUpForm","routes","component","childRoutes","path","getComponent","callback","onEnter","nextState","deauthenticateUser","ReactDOM","render","history","browserHistory","getElementById"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0QCiDzBC,wHA1CWC,EAAOC,GAC7BC,aAAaC,QAAQ,QAASH,GAC9BE,aAAaC,QAAQ,QAASF,iDAS9B,OAAyC,OAAlCC,aAAaE,QAAQ,sDAQ5BF,aAAaG,WAAW,SACxBH,aAAaG,WAAW,4CASxB,OAAOH,aAAaE,QAAQ,4CAS3B,OAAOF,aAAaE,QAAQ,mBCSlBE,yLAhDP,IAAIC,EAAM,qCAAuCR,EAAKS,WAC9C,WAAaC,KAAKC,MAAMC,KAAKC,OAEjCC,EAAU,IAAIC,QAAQC,UAAUR,GAAM,CACxCS,OAAQ,OACRC,QAAS,CACTC,cAAiB,UAAYnB,EAAKoB,YAEnCC,MAAO,aAERC,MAAMR,oCAGD,IAAAS,EAAAb,KAEL,OACIc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,QAAS,kBAAML,EAAKM,cAAcN,EAAKZ,MAAMC,KAAKJ,OAC9EgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKI,IAAKpB,KAAKC,MAAMC,KAAKmB,WAAYC,IAAI,UAE9CR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAKhB,KAAKC,MAAMC,KAAKqB,OACrBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAIhB,KAAKC,MAAMC,KAAKsB,aACpBV,EAAAC,EAAAC,cAAA,WAC+B,MAA1BhB,KAAKC,MAAMC,KAAKuB,QAAkBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6BjB,KAAKC,MAAMC,KAAKuB,OAAOC,MAC3E,MAA1B1B,KAAKC,MAAMC,KAAKyB,QAAkBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8BjB,KAAKC,MAAMC,KAAKyB,QACtE,MAAzB3B,KAAKC,MAAMC,KAAK0B,OAAiBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BjB,KAAKC,MAAMC,KAAK0B,OACpE,MAAxB5B,KAAKC,MAAMC,KAAK2B,MAAgBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBjB,KAAKC,MAAMC,KAAK2B,mDAU9G/B,GAEVE,KAAK8B,eACLC,OAAOC,KAAKlC,EAAK,iBA/CFmC,IAAMC,6BCkGdC,cA3FX,SAAAA,IAAc,IAAAtB,EAAA,OAAAuB,OAAAC,EAAA,EAAAD,CAAApC,KAAAmC,IACVtB,EAAAuB,OAAAE,EAAA,EAAAF,CAAApC,KAAAoC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAxC,QACKyC,MAAQ,CAACvC,KAAK,KAAMwC,QAAQ,EAAGC,WAAW,EAAGC,WAAU,GAC5D/B,EAAKgC,aAAehC,EAAKgC,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAvB,KAHVA,mFAOVb,KAAKgD,eACLhD,KAAKgD,aAAeC,IAAEC,SAASlD,KAAKgD,aAAa,KACjDjB,OAAOoB,iBAAiB,SAAUnD,KAAK6C,qDAKvC,IAAIO,EAAUrB,OAAOqB,SAAWrB,OAAOsB,aAAeC,SAASC,gBAAgBC,UAC1EzB,OAAO0B,YAAcL,GAAaE,SAASI,KAAKC,aAAe,KAChEC,QAAQC,IAAI,qBACZ7D,KAAKgD,uDAIE,IAAAc,EAAA9D,KACf,IAA6B,IAAzBA,KAAKyC,MAAMG,UAAf,CAIA,IAAI9C,EAAM,qCAAuCR,EAAKS,WAC1C,YAAcC,KAAKyC,MAAMC,QAEjCtC,EAAU,IAAIC,QAAQC,UAAUR,GAAM,CACxCS,OAAQ,MACRC,QAAS,CACPC,cAAiB,UAAYnB,EAAKoB,YAEpCC,MAAO,aAETC,MAAMR,GACH2D,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAAC7D,GACAA,GAAyB,IAAhBA,EAAKgE,QACjBJ,EAAKK,SAAS,CAACvB,WAAW,IAG5BkB,EAAKK,SAAS,CACZjE,KAAM4D,EAAKrB,MAAMvC,KAAM4D,EAAKrB,MAAMvC,KAAKkE,OAAOlE,GAAQA,EACtDwC,QAASoB,EAAKrB,MAAMC,QAAU,4CAQhC,IAAI2B,EAAYrE,KAAKyC,MAAMvC,KAAKoE,IAAI,SAASpE,GAEzC,OAEIY,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBsD,IAAOrE,EAAKC,OAAQqE,KAAK,KACpD1D,EAAAC,EAAAC,cAACyD,EAAD,CAAUvE,KAAMA,OAK5B,OACIY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVoD,qCAOb,OAAIrE,KAAKyC,MAAMvC,KAEPY,EAAAC,EAAAC,cAAA,WACKhB,KAAK0E,cAKV5D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAK2D,GAAG,mBAAR,mBAnFI1C,IAAMC,yCCaf0C,GClBM3C,IAAMC,2LDMvB,OACIpB,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAC6D,EAAD,eAPE3C,cEIE4C,QACW,cAA7B/C,OAAOgD,SAASC,UAEe,UAA7BjD,OAAOgD,SAASC,UAEhBjD,OAAOgD,SAASC,SAASC,MACvB,2DCdN,IA6BeC,EA7BF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACXtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGwD,KAAK,IAAIvD,UAAU,cAAtB,oBACAH,EAAAC,EAAAC,cAAA,MAAI2D,GAAG,aAAa1D,UAAU,SAC3B3B,EAAK+F,sBACHvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK1B,EAAKS,YACVe,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GAAG,WAAT,aAGNzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GAAG,UAAT,WACJzE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GAAG,WAAT,gBAMfzE,EAAAC,EAAAC,cAAA,WACCoE,ICsBUI,UA3CG,SAAAL,GAAA,IAChBM,EADgBN,EAChBM,SACAC,EAFgBP,EAEhBO,SACAC,EAHgBR,EAGhBQ,OAHgBR,EAIhBS,KAJgB,OAMhB9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAU4E,OAAO,IAAIJ,SAAUA,GAC7C3E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,SACC0E,EAAOG,SAAWhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiB0E,EAAOG,UAC7EhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAW0D,GAAG,QAAQoB,KAAK,QAAQrE,KAAK,QAAQgE,SAAUA,IAC3E5E,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,SAAf,WAGHL,EAAOnG,OAASsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiB0E,EAAOnG,QAC3EsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAW0D,GAAG,WAAWoB,KAAK,WAAWrE,KAAK,WAAWgE,SAAUA,IACpF5E,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,YAAf,cAGHL,EAAOM,UAAYnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiB0E,EAAOM,WAC9EnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAO+E,KAAK,SAAS9E,UAAU,gDAAgDiF,MAAM,YAEvFpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,sBAA8CH,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GAAG,WAAT,kBC3BlDY,cAEJ,SAAAA,EAAYlG,EAAOmG,GAAS,IAAAvF,EAAA,OAAAuB,OAAAC,EAAA,EAAAD,CAAApC,KAAAmG,IAC1BtF,EAAAuB,OAAAE,EAAA,EAAAF,CAAApC,KAAAoC,OAAAG,EAAA,EAAAH,CAAA+D,GAAA3D,KAAAxC,KAAMC,EAAOmG,KAGR3D,MAAQ,CACXkD,OAAQ,GACRC,KAAM,CACJpG,MAAO,GACPyG,SAAU,KAIdpF,EAAKwF,YAAcxF,EAAKwF,YAAYvD,KAAjBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAvB,KACnBA,EAAKyF,WAAazF,EAAKyF,WAAWxD,KAAhBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAvB,KAbQA,2EAgBhB0F,GAAO,IAAAzC,EAAA9D,KAEjBuG,EAAMC,iBAEN,IAAMhH,EAAQQ,KAAKyC,MAAMmD,KAAKpG,MACxByG,EAAWjG,KAAKyC,MAAMmD,KAAKK,SAEjCrC,QAAQC,IAAI,SAAUrE,GACtBoE,QAAQC,IAAI,YAAaoC,GAGzBrF,MAAM,mCAAoC,CACxCL,OAAQ,OACRI,MAAO,WACPH,QAAS,CACPiG,OAAU,mBACVC,eAAgB,oBAElBhD,KAAMiD,KAAKC,UAAU,CACnBpH,MAAOQ,KAAKyC,MAAMmD,KAAKpG,MACvByG,SAAUjG,KAAKyC,MAAMmD,KAAKK,aAE3BlC,KAAK,SAAA8C,GACkB,MAApBA,EAASC,QACXhD,EAAKK,SAAS,CACZwB,OAAQ,KAGVkB,EAAS5C,OAAOF,KAAK,SAASE,GAC5BL,QAAQC,IAAII,GACZ3E,EAAKyH,iBAAiB9C,EAAK1E,MAAOC,GAClCQ,KAAKoG,QAAQY,OAAOC,QAAQ,MAC5BnE,KAAKgB,MAGPF,QAAQC,IAAI,gBACZgD,EAAS5C,OAAOF,KAAK,SAASE,GAC5B,IAAM0B,EAAS1B,EAAK0B,OAAS1B,EAAK0B,OAAS,GAC3CA,EAAOG,QAAU7B,EAAKiD,QACtBlH,KAAKmE,SAAS,CAACwB,YACf7C,KAAKgB,0CAKFyC,GACT,IAAMY,EAAQZ,EAAMa,OAAO1F,KACrBkE,EAAO5F,KAAKyC,MAAMmD,KACxBA,EAAKuB,GAASZ,EAAMa,OAAOlB,MAE3BlG,KAAKmE,SAAS,CACZyB,0CAKF,OACE9E,EAAAC,EAAAC,cAACqG,EAAD,CACE5B,SAAUzF,KAAKqG,YACfX,SAAU1F,KAAKsG,WACfX,OAAQ3F,KAAKyC,MAAMkD,OACnBC,KAAM5F,KAAKyC,MAAMmD,cA/ED3D,IAAMC,WAsF9BiE,EAAUmB,aAAe,CACvBN,OAAQO,YAAUC,OAAOC,YAGZtB,QC1CAuB,UAjDI,SAAAvC,GAAA,IACjBM,EADiBN,EACjBM,SACAC,EAFiBP,EAEjBO,SACAC,EAHiBR,EAGjBQ,OAHiBR,EAIjBS,KAJiB,OAMjB9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAU4E,OAAO,IAAIJ,SAAUA,GAC7C3E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,WACC0E,EAAOG,SAAWhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiB0E,EAAOG,UAC7EhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAO2D,GAAG,QAAQoB,KAAK,QAAQrE,KAAK,QAAQT,UAAU,WAAWyE,SAAUA,IAC3E5E,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,SAAf,WAGHL,EAAOnG,OAASsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiB0E,EAAOnG,QAC3EsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAO2D,GAAG,WAAWoB,KAAK,WAAWrE,KAAK,WAAWT,UAAU,WAAWyE,SAAUA,IACpF5E,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,YAAf,cAGHL,EAAOM,UAAYnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiB0E,EAAOM,WAC9EnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAO2D,GAAG,mBAAmBoB,KAAK,WAAWrE,KAAK,mBAAmBT,UAAU,WAAWyE,SAAUA,IACpG5E,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,oBAAf,sBAGJlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAO+E,KAAK,SAAS9E,UAAU,gDAAgDiF,MAAM,aAEvFpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,6BAAqDH,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GAAG,UAAT,gBCrCzDoC,cAEJ,SAAAA,EAAY1H,EAAOmG,GAAS,IAAAvF,EAAA,OAAAuB,OAAAC,EAAA,EAAAD,CAAApC,KAAA2H,IAC1B9G,EAAAuB,OAAAE,EAAA,EAAAF,CAAApC,KAAAoC,OAAAG,EAAA,EAAAH,CAAAuF,GAAAnF,KAAAxC,KAAMC,EAAOmG,KAGR3D,MAAQ,CACXkD,OAAQ,GACRC,KAAM,CACJpG,MAAO,GACPyG,SAAU,GACV2B,iBAAkB,KAItB/G,EAAKwF,YAAcxF,EAAKwF,YAAYvD,KAAjBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAvB,KACnBA,EAAKyF,WAAazF,EAAKyF,WAAWxD,KAAhBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAvB,KAdQA,2EAiBhB0F,GAAO,IAAAzC,EAAA9D,KAEjBuG,EAAMC,iBAEN,IAAMhH,EAAQQ,KAAKyC,MAAMmD,KAAKpG,MACxByG,EAAWjG,KAAKyC,MAAMmD,KAAKK,SAC3B2B,EAAmB5H,KAAKyC,MAAMmD,KAAKgC,iBAEzChE,QAAQC,IAAI,SAAUrE,GACtBoE,QAAQC,IAAI,YAAaoC,GACzBrC,QAAQC,IAAI,mBAAoB+D,GAE5B3B,IAAa2B,GAKjBhH,MAAM,oCAAqC,CACzCL,OAAQ,OACRI,MAAO,WACPH,QAAS,CACPiG,OAAU,mBACVC,eAAgB,oBAElBhD,KAAMiD,KAAKC,UAAU,CACnBpH,MAAOQ,KAAKyC,MAAMmD,KAAKpG,MACvByG,SAAUjG,KAAKyC,MAAMmD,KAAKK,aAE3BlC,KAAK,SAAA8C,GACkB,MAApBA,EAASC,QACXhD,EAAKK,SAAS,CACZwB,OAAQ,KAIV7B,EAAKsC,QAAQY,OAAOC,QAAQ,WAG5BJ,EAAS5C,OAAOF,KAAK,SAASE,GAC5BL,QAAQC,IAAII,GACZ,IAAM0B,EAAS1B,EAAK0B,OAAS1B,EAAK0B,OAAS,GAC3CA,EAAOG,QAAU7B,EAAKiD,QACtBtD,QAAQC,IAAI7D,KAAKyC,MAAMkD,QACvB3F,KAAKmE,SAAS,CAACwB,YACf7C,KAAKgB,yCAKFyC,GACT,IAAMY,EAAQZ,EAAMa,OAAO1F,KACrBkE,EAAO5F,KAAKyC,MAAMmD,KAOxB,GANAA,EAAKuB,GAASZ,EAAMa,OAAOlB,MAE3BlG,KAAKmE,SAAS,CACZyB,SAGE5F,KAAKyC,MAAMmD,KAAKK,WAAajG,KAAKyC,MAAMmD,KAAKgC,iBAAkB,CACjE,IAAMjC,EAAS3F,KAAKyC,MAAMkD,OAC1BA,EAAOM,SAAW,6CAClBjG,KAAKmE,SAAS,CAACwB,eACV,CACL,IAAMA,EAAS3F,KAAKyC,MAAMkD,OAC1BA,EAAOM,SAAW,GAClBjG,KAAKmE,SAAS,CAACwB,6CAKjB,OACE7E,EAAAC,EAAAC,cAAC6G,EAAD,CACEpC,SAAUzF,KAAKqG,YACfX,SAAU1F,KAAKsG,WACfX,OAAQ3F,KAAKyC,MAAMkD,OACnBC,KAAM5F,KAAKyC,MAAMmD,cA9FA3D,IAAMC,WAsG/ByF,EAAWL,aAAe,CACxBN,OAAQO,YAAUC,OAAOC,YAGZE,IChEAG,EAtCA,CAEbC,UAAW7C,EACX8C,YAAa,CAEX,CACEC,KAAM,IACNC,aAAc,SAACnD,EAAUoD,GACnB7I,EAAK+F,sBACP8C,EAAS,KAAMvD,GAEfuD,EAAS,KAAMhC,KAKrB,CACE8B,KAAM,SACNF,UAAW5B,GAGb,CACE8B,KAAM,UACNF,UD+ESJ,GC5EX,CACEM,KAAM,UACNG,QAAS,SAACC,EAAWpB,GACnB3H,EAAKgJ,qBAGLrB,EAAQ,SC9BhBsB,IAASC,OACL1H,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAQmD,QAASC,IAAgBZ,OAAQA,IACzCxE,SAASqF,eAAe","file":"static/js/main.27f6151b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","class Auth {\n  /**\n   * Authenticate a user. Save a token string in Local Storage\n   *\n   * @param {string} token\n   * @param {string} email\n   */\n  static authenticateUser(token, email) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('email', email);\n  }\n\n  /**\n   * Check if a user is authenticated - check if a token is saved in Local Storage\n   *\n   * @returns {boolean}\n   */\n  static isUserAuthenticated() {\n    return localStorage.getItem('token') !== null;\n  }\n\n  /**\n   * Deauthenticate a user. Remove token and email from Local Storage.\n   *\n   */\n  static deauthenticateUser() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n  }\n\n  /**\n   * Get a token value.\n   *\n   * @returns {string}\n   */\n  static getToken() {\n    return localStorage.getItem('token');\n  }\n\n  /**\n   * Get email.\n   *\n   * @returns {string}\n   */\n   static getEmail() {\n     return localStorage.getItem('email');\n   }\n}\n\nexport default Auth;\n","import React from 'react';\nimport './NewsCard.css';\nimport Auth from '../Auth/Auth'\nclass NewsCard extends React.Component{\n\n    sendClickLog() {\n        let url = 'http://localhost:3000/news/userId/' + Auth.getEmail()\n              + '/newsId/' + this.props.news.digest;\n\n        let request = new Request(encodeURI(url), {\n          method: 'POST',\n          headers: {\n          'Authorization': 'bearer ' + Auth.getToken(),\n         },\n         cache: 'no-cache'});\n\n        fetch(request);\n    }\n\n    render() {\n        //console.log(\"NewsCard data: \" + this.props.news)\n        return(\n            <div className=\"news-container\" onClick={() => this.redirectToUrl(this.props.news.url)}>\n                <div className=\"row\">\n                    <div className=\"col s4 fill\">\n                        <img src={this.props.news.urlToImage} alt='news'/>\n                    </div>\n                    <div className=\"col s8\">\n                        <div className=\"news-intro-col\">\n                            <div className=\"news-intro-panel\">\n                                <h4>{this.props.news.title}</h4>\n                                <div className=\"news-description\">\n                                    <p>{this.props.news.description}</p>\n                                    <div>\n                                        {this.props.news.source != null && <div className='chip light-blue news-chip'>{this.props.news.source.name}</div>}\n                                        {this.props.news.reason != null && <div className='chip light-green news-chip'>{this.props.news.reason}</div>}\n                                        {this.props.news.class != null && <div className='chip light-red news-chip'>{this.props.news.class}</div>}\n                                        {this.props.news.time != null && <div className='chip amber news-chip'>{this.props.news.time}</div>}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    redirectToUrl(url) {\n\n        this.sendClickLog();\n        window.open(url, '_blank');\n\n    }\n}\nexport default NewsCard;","//import './NewsPanel.css';\n\nimport NewsCard from '../NewsCard/NewsCard'\nimport _ from 'lodash'\nimport React from 'react';\nimport Auth from '../Auth/Auth'\n//import Auth from '../Auth/Auth';\n//import NewsCard from '../NewsCard/NewsCard';\n\nclass NewsPanel extends React.Component{\n    constructor() {\n        super();\n        this.state = {news:null, pageNum:1, totalPages:1, loadedAll:false};\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadMoreNews();\n        this.loadMoreNews = _.debounce(this.loadMoreNews,1000);\n        window.addEventListener('scroll', this.handleScroll);\n\n\n    }\n    handleScroll() {\n        let scrollY = window.scrollY || window.pageYOffset || document.documentElement.scrollTop;\n        if ((window.innerHeight + scrollY) >= (document.body.offsetHeight - 50)) {\n            console.log('Loading more news');\n            this.loadMoreNews();\n        }\n    }\n\n    loadMoreNews() {\n    if (this.state.loadedAll === true) {\n      return;\n    }\n\n    let url = 'http://localhost:3000/news/userId/' + Auth.getEmail()\n              + '/pageNum/' + this.state.pageNum;\n\n    let request = new Request(encodeURI(url), {\n      method: 'GET',\n      headers: {\n        'Authorization': 'bearer ' + Auth.getToken(),\n      },\n      cache: 'no-cache'});\n\n    fetch(request)\n      .then((res) => res.json())\n      .then((news) => {\n        if (!news ||  news.length === 0) {\n          this.setState({loadedAll: true});\n        }\n\n        this.setState({\n          news: this.state.news? this.state.news.concat(news) : news,\n          pageNum: this.state.pageNum + 1\n        });\n      });\n  }\n\n\n\n    renderNews() {\n        let news_list = this.state.news.map(function(news) {\n\n            return(\n\n                <a className='list-group-item' key = {news.digest} href=\"#\">\n                    <NewsCard news={news} />\n                </a>\n            );\n        });\n\n        return(\n            <div className=\"container-fluid\">\n                <div className='list-group'>\n                    {news_list}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.news) {\n            return(\n                <div>\n                    {this.renderNews()}\n                </div>\n            );\n        } else {\n            return(\n                <div>\n                    <div id='msg-app-loading'>\n                        Loading\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default NewsPanel;\n","import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport NewsPanel from '../NewsPanel/NewsPanel'\nimport 'materialize-css/dist/css/materialize.css'\nimport 'materialize-css/dist/js/materialize.js'\nimport './App.css';\nimport Navbar from '../Navbar/navbar'\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n            {/*<img className='logo' src={logo} alt='logo'/>*/}\n            <div className='container'>\n\n                <NewsPanel/>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport Auth from '../Auth/Auth'\n\nclass Navbar extends React.Component{\n\n    render() {\n        console.log(\"Rendering NavBar\")\n        return (\n\n                <nav className=\"nav-bar indigo lighten-1\">\n                    <div className=\"nav-wrapper\">\n                        <a href=\"/\" className=\"brand-logo\">&nbsp;&nbsp;Smart News</a>\n                        <ul id=\"nav-mobile\" className=\"right\">\n                            {Auth.isUserAuthenticated() ?\n                                (<div>\n                                    <li>{Auth.getEmail()}</li>\n                                    <li><Link to=\"/logout\">Log out</Link></li>\n                                </div>)\n                                :\n                                (<div>\n                                    <li><Link to=\"/login\">Log in</Link></li>\n                                    <li><Link to=\"/signup\">Sign up</Link></li>\n                                </div>)\n                            }\n                        </ul>\n\n                    </div>\n                </nav>\n\n\n\n        )\n    }\n}\n\nexport default Navbar;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { PropTypes } from 'react';\nimport {Link} from 'react-router';\nimport Auth from '../Auth/Auth';\n\nconst Base = ({ children }) => (\n  <div>\n    <nav className=\"nav-bar indigo lighten-1\">\n      <div className=\"nav-wrapper\">\n        <a href=\"/\" className=\"brand-logo\">&nbsp;&nbsp;Tap News</a>\n        <ul id=\"nav-mobile\" className=\"right\">\n          {Auth.isUserAuthenticated() ?\n            (<div>\n               <li>{Auth.getEmail()}</li>\n               <li><Link to=\"/logout\">Log out</Link></li>\n             </div>)\n             :\n            (<div>\n               <li><Link to=\"/login\">Log in</Link></li>\n               <li><Link to=\"/signup\">Sign up</Link></li>\n             </div>)\n          }\n        </ul>\n      </div>\n    </nav>\n    <br/>\n    {children}\n  </div>\n);\n\nBase.propTypes = {\n  children: PropTypes.object.isRequired\n};\n\nexport default Base;\n","import React, {PropTypes} from 'react';\nimport { Link } from 'react-router';\nimport './LoginForm.css';\n\nconst LoginForm = ({\n  onSubmit,\n  onChange,\n  errors,\n  user,\n}) => (\n  <div className=\"container\">\n    <div className=\"card-panel login-panel\">\n      <form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n        <h4 className=\"center-align\">Login</h4>\n        {errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input className=\"validate\" id=\"email\" type=\"email\" name=\"email\" onChange={onChange}/>\n            <label htmlFor='email'>Email</label>\n          </div>\n        </div>\n        {errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input className=\"validate\" id=\"password\" type=\"password\" name=\"password\" onChange={onChange}/>\n            <label htmlFor='password'>Password</label>\n          </div>\n        </div>\n        {errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n        <div className=\"row right-align\">\n          <input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Log in'/>\n        </div>\n        <div className=\"row\">\n          <p className=\"right-align\"> New to Tap News?  <Link to=\"/signup\">Sign Up</Link></p>\n        </div>\n      </form>\n    </div>\n  </div>\n);\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default LoginForm;\n","import React, {PropTypes} from 'react';\n\nimport Auth from '../Auth/Auth';\nimport LoginForm from './LoginForm';\n\n\nclass LoginPage extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    // set the initial component state\n    this.state = {\n      errors: {},\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n\n    this.processForm = this.processForm.bind(this);\n    this.changeUser = this.changeUser.bind(this);\n  }\n\n  processForm(event) {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    const email = this.state.user.email;\n    const password = this.state.user.password;\n\n    console.log('email:', email);\n    console.log('password:', password);\n\n    // Post login data\n    fetch('http://localhost:3000/auth/login', {\n      method: 'POST',\n      cache: 'no-cache',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: this.state.user.email,\n        password: this.state.user.password\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          errors: {}\n        });\n\n        response.json().then(function(json) {\n          console.log(json);\n          Auth.authenticateUser(json.token, email);\n          this.context.router.replace('/');\n        }.bind(this));\n\n      } else {\n        console.log('Login failed');\n        response.json().then(function(json) {\n          const errors = json.errors ? json.errors : {};\n          errors.summary = json.message;\n          this.setState({errors});\n        }.bind(this));\n      }\n    });\n  }\n\n  changeUser(event) {\n    const field = event.target.name;\n    const user = this.state.user;\n    user[field] = event.target.value;\n\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    return (\n      <LoginForm\n        onSubmit={this.processForm}\n        onChange={this.changeUser}\n        errors={this.state.errors}\n        user={this.state.user}\n      />\n    );\n  }\n}\n\n// To make react-router work\nLoginPage.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default LoginPage;\n","import React, {PropTypes} from 'react';\nimport { Link } from 'react-router';\n\nimport './SignUpForm.css';\n\nconst SignUpForm = ({\n  onSubmit,\n  onChange,\n  errors,\n  user,\n}) => (\n  <div className=\"container\">\n    <div className=\"card-panel signup-panel\">\n      <form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n        <h4 className=\"center-align\">Sign Up</h4>\n        {errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input id=\"email\" type=\"email\" name=\"email\" className=\"validate\" onChange={onChange}/>\n            <label htmlFor=\"email\">Email</label>\n          </div>\n        </div>\n        {errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input id=\"password\" type=\"password\" name=\"password\" className=\"validate\" onChange={onChange}/>\n            <label htmlFor=\"password\">Password</label>\n          </div>\n        </div>\n        {errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input id=\"confirm_password\" type=\"password\" name=\"confirm_password\" className=\"validate\" onChange={onChange}/>\n            <label htmlFor=\"confirm_password\">Conform Password</label>\n          </div>\n        </div>\n        <div className=\"row right-align\">\n          <input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Sign Up'/>\n        </div>\n        <div className=\"row\">\n          <p className=\"right-align\"> Already have an account? <Link to=\"/login\">Login</Link></p>\n        </div>\n      </form>\n    </div>\n  </div>\n);\n\nSignUpForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default SignUpForm;\n","import React, {PropTypes} from 'react';\nimport SignUpForm from './SignUpForm';\n\nclass SignUpPage extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    // set the initial component state\n    this.state = {\n      errors: {},\n      user: {\n        email: '',\n        password: '',\n        confirm_password: ''\n      }\n    };\n\n    this.processForm = this.processForm.bind(this);\n    this.changeUser = this.changeUser.bind(this);\n  }\n\n  processForm(event) {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    const email = this.state.user.email;\n    const password = this.state.user.password;\n    const confirm_password = this.state.user.confirm_password;\n\n    console.log('email:', email);\n    console.log('password:', password);\n    console.log('confirm_assword:', confirm_password);\n\n    if (password !== confirm_password) {\n      return;\n    }\n\n    // Post registeration data\n    fetch('http://localhost:3000/auth/signup', {\n      method: 'POST',\n      cache: 'no-cache',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: this.state.user.email,\n        password: this.state.user.password\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          errors: {}\n        });\n\n        // change the current URL to /login\n        this.context.router.replace('/login');\n\n      } else {\n        response.json().then(function(json) {\n          console.log(json);\n          const errors = json.errors ? json.errors : {};\n          errors.summary = json.message;\n          console.log(this.state.errors);\n          this.setState({errors});\n        }.bind(this));\n      }\n    });\n  }\n\n  changeUser(event) {\n    const field = event.target.name;\n    const user = this.state.user;\n    user[field] = event.target.value;\n\n    this.setState({\n      user\n    });\n\n    if (this.state.user.password !== this.state.user.confirm_password) {\n      const errors = this.state.errors;\n      errors.password = \"Password and Confirm Password don't match.\";\n      this.setState({errors});\n    } else {\n      const errors = this.state.errors;\n      errors.password = '';\n      this.setState({errors});\n    }\n  }\n\n  render() {\n    return (\n      <SignUpForm\n        onSubmit={this.processForm}\n        onChange={this.changeUser}\n        errors={this.state.errors}\n        user={this.state.user}\n      />\n    );\n  }\n\n}\n\n// To make react-router work\nSignUpPage.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default SignUpPage;\n","import Base from './Base/Base';\nimport App from './App/App';\nimport LoginPage from './Login/LoginPage';\nimport SignUpPage from './SignUp/SignUpPage';\nimport Auth from './Auth/Auth';\n\n\nconst routes = {\n  // base component (wrapper for the whole application).\n  component: Base,\n  childRoutes: [\n\n    {\n      path: '/',\n      getComponent: (location, callback) => {\n        if (Auth.isUserAuthenticated()) {\n          callback(null, App);\n        } else {\n          callback(null, LoginPage);\n        }\n      }\n    },\n\n    {\n      path: '/login',\n      component: LoginPage\n    },\n\n    {\n      path: '/signup',\n      component: SignUpPage\n    },\n\n    {\n      path: '/logout',\n      onEnter: (nextState, replace) => {\n        Auth.deauthenticateUser();\n\n        // change the current URL to /\n        replace('/');\n      }\n    }\n  ]\n};\n\nexport default routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { browserHistory, Router } from 'react-router';\nimport routes from './routes';\n\nReactDOM.render(\n    <Router history={browserHistory} routes={routes} />,\n    document.getElementById('root')\n);\n//\n// ReactDOM.render(<App />, document.getElementById('root'));\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}